Index: .idea/dictionaries/CED.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/dictionaries/CED.xml	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
+++ .idea/dictionaries/CED.xml	(revision d023858019fa6b91cd72e1191751e8380cdd95fa)
@@ -2,6 +2,7 @@
   <dictionary name="CED">
     <words>
       <w>badtank</w>
+      <w>collider</w>
       <w>goodtank</w>
     </words>
   </dictionary>
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/encodings.xml	(revision d023858019fa6b91cd72e1191751e8380cdd95fa)
+++ .idea/encodings.xml	(revision d023858019fa6b91cd72e1191751e8380cdd95fa)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/src/test/java/test/tank/ResourceMgrTestTest.java" charset="GBK" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
+++ .idea/misc.xml	(revision d023858019fa6b91cd72e1191751e8380cdd95fa)
@@ -7,7 +7,7 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_13" default="false" project-jdk-name="13" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: TankWar.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- TankWar.iml	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
+++ TankWar.iml	(revision d023858019fa6b91cd72e1191751e8380cdd95fa)
@@ -5,16 +5,11 @@
       <configuration />
     </facet>
   </component>
-  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
-    <output url="file://$MODULE_DIR$/target/classes" />
-    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_13" inherit-compiler-output="true">
     <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
-      <excludeFolder url="file://$MODULE_DIR$/target" />
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
     </content>
-    <orderEntry type="jdk" jdkName="1.8" jdkType="JavaSDK" />
+    <orderEntry type="jdk" jdkName="13" jdkType="JavaSDK" />
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="module-library">
       <library name="JUnit4">
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
+++ pom.xml	(revision d023858019fa6b91cd72e1191751e8380cdd95fa)
@@ -36,9 +36,8 @@
                 <jdk>1.8</jdk>
             </activation>
             <properties>
-                <maven.compiler.source>1.8</maven.compiler.source>
-                <maven.compiler.target>1.8</maven.compiler.target>
-                <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>
+                <maven.compiler.source>12</maven.compiler.source>
+                <maven.compiler.target>12</maven.compiler.target>
             </properties>
         </profile>
     </profiles>
Index: src/main/java/abstractfactory/BaseBullet.java
===================================================================
--- src/main/java/abstractfactory/BaseBullet.java	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
+++ src/main/java/abstractfactory/BaseBullet.java	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
@@ -1,9 +0,0 @@
-package abstractfactory;
-
-import java.awt.Graphics;
-
-public abstract class BaseBullet {
-    public abstract void paint(Graphics g);
-
-    public abstract void collideWith(BaseTank tank);
-}
\ No newline at end of file
Index: src/main/java/abstractfactory/BaseExplode.java
===================================================================
--- src/main/java/abstractfactory/BaseExplode.java	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
+++ src/main/java/abstractfactory/BaseExplode.java	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
@@ -1,7 +0,0 @@
-package abstractfactory;
-
-import java.awt.Graphics;
-
-public abstract class BaseExplode {
-    public abstract void paint(Graphics g);
-}
\ No newline at end of file
Index: src/main/java/abstractfactory/BaseTank.java
===================================================================
--- src/main/java/abstractfactory/BaseTank.java	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
+++ src/main/java/abstractfactory/BaseTank.java	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
@@ -1,23 +0,0 @@
-package abstractfactory;
-
-import tank.Group;
-
-import java.awt.Graphics;
-import java.awt.Rectangle;
-
-public abstract class BaseTank {
-    public Group group = Group.BAD;
-    public Rectangle rect = new Rectangle();
-
-    public abstract void paint(Graphics g);
-
-    public Group getGroup() {
-        return this.group;
-    }
-
-    public abstract void die();
-
-    public abstract int getX();
-
-    public abstract int getY();
-}
\ No newline at end of file
Index: src/main/java/abstractfactory/DefaultFactory.java
===================================================================
--- src/main/java/abstractfactory/DefaultFactory.java	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
+++ src/main/java/abstractfactory/DefaultFactory.java	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
@@ -1,24 +0,0 @@
-package abstractfactory;
-
-import tank.*;
-
-public class DefaultFactory extends GameFactory {
-
-
-
-    @Override
-    public BaseTank createTank(int x, int y, Dir dir, Group group, TankFrame tf) {
-        return new Tank(x, y, dir, group, tf);
-    }
-
-    @Override
-    public BaseExplode createExplode(int x, int y, TankFrame tf) {
-        return new Explode(x, y, tf);
-    }
-
-    @Override
-    public BaseBullet createBullet(int x, int y, Dir dir, Group group, TankFrame tf) {
-        return new Bullet(x, y, dir, group, tf);
-    }
-
-}
\ No newline at end of file
Index: src/main/java/abstractfactory/GameFactory.java
===================================================================
--- src/main/java/abstractfactory/GameFactory.java	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
+++ src/main/java/abstractfactory/GameFactory.java	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
@@ -1,10 +0,0 @@
-package abstractfactory;
-
-;
-import tank.*;
-
-public abstract class GameFactory {
-    public abstract BaseTank createTank(int x, int y, Dir dir, Group group, TankFrame tf);
-    public abstract BaseExplode createExplode(int x, int y, TankFrame tf);
-    public abstract BaseBullet createBullet(int x, int y, Dir dir, Group group, TankFrame tf);
-}
\ No newline at end of file
Index: src/main/java/abstractfactory/RectBullet.java
===================================================================
--- src/main/java/abstractfactory/RectBullet.java	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
+++ src/main/java/abstractfactory/RectBullet.java	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
@@ -1,100 +0,0 @@
-package abstractfactory;
-
-import java.awt.Color;
-import java.awt.Graphics;
-import java.awt.Rectangle;
-import tank.*;
-
-public class RectBullet extends BaseBullet {
-	private static final int SPEED = 6;
-	public static int WIDTH = ResourceMgr.bulletD.getWidth();
-	public static int HEIGHT = ResourceMgr.bulletD.getHeight();
-
-	Rectangle rect = new Rectangle();
-
-	private int x, y;
-	private Dir dir;
-
-	private boolean living = true;
-	TankFrame tf = null;
-	private Group group = Group.BAD;
-
-	public RectBullet(int x, int y, Dir dir, Group group, TankFrame tf) {
-		this.x = x;
-		this.y = y;
-		this.dir = dir;
-		this.group = group;
-		this.tf = tf;
-
-		rect.x = this.x;
-		rect.y = this.y;
-		rect.width = WIDTH;
-		rect.height = HEIGHT;
-
-		tf.bullets.add(this);
-
-	}
-
-	public Group getGroup() {
-		return group;
-	}
-
-	public void setGroup(Group group) {
-		this.group = group;
-	}
-
-	public void paint(Graphics g) {
-		if(!living) {
-			tf.bullets.remove(this);
-		}
-
-		Color c = g.getColor();
-		g.setColor(Color.YELLOW);
-		g.fillRect(x, y, 20, 20);
-		g.setColor(c);
-
-		move();
-	}
-
-	private void move() {
-
-		switch (dir) {
-			case LEFT:
-				x -= SPEED;
-				break;
-			case UP:
-				y -= SPEED;
-				break;
-			case RIGHT:
-				x += SPEED;
-				break;
-			case DOWN:
-				y += SPEED;
-				break;
-		}
-
-		//update rect
-		rect.x = this.x;
-		rect.y = this.y;
-
-		if(x < 0 || y < 0 || x > TankFrame.GAME_WIDTH || y > TankFrame.GAME_HEIGHT) living = false;
-
-	}
-
-	public void collideWith(BaseTank tank) {
-		if(this.group == tank.getGroup()) return;
-
-		if(rect.intersects(tank.rect)) {
-			tank.die();
-			this.die();
-			int eX = tank.getX() + Tank.WIDTH/2 - Explode.WIDTH/2;
-			int eY = tank.getY() + Tank.HEIGHT/2 - Explode.HEIGHT/2;
-			tf.explodes.add(tf.gf.createExplode(eX, eY, tf));
-		}
-
-	}
-
-	private void die() {
-		this.living = false;
-	}
-}
\ No newline at end of file
Index: src/main/java/abstractfactory/RectExplode.java
===================================================================
--- src/main/java/abstractfactory/RectExplode.java	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
+++ src/main/java/abstractfactory/RectExplode.java	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
@@ -1,45 +0,0 @@
-package abstractfactory;
-
-import java.awt.Color;
-import java.awt.Graphics;
-import tank.*;
-
-public class RectExplode extends BaseExplode {
-
-    public static int WIDTH = ResourceMgr.explodes[0].getWidth();
-    public static int HEIGHT = ResourceMgr.explodes[0].getHeight();
-
-    private int x, y;
-
-    //private boolean living = true;
-    TankFrame tf = null;
-
-    private int step = 0;
-
-    public RectExplode(int x, int y, TankFrame tf) {
-        this.x = x;
-        this.y = y;
-        this.tf = tf;
-
-        new Thread(()->new Audio("audio/explode.wav").play()).start();
-    }
-
-
-    @Override
-    public void paint(Graphics g) {
-
-        //g.drawImage(ResourceMgr.explodes[step++], x, y, null);
-        Color c = g.getColor();
-        g.setColor(Color.RED);
-        g.fillRect(x, y, 10*step, 10*step);
-        step++;
-
-        if(step >= 15)
-            tf.explodes.remove(this);
-
-        g.setColor(c);
-
-
-    }
-
-}
\ No newline at end of file
Index: src/main/java/abstractfactory/RectFactory.java
===================================================================
--- src/main/java/abstractfactory/RectFactory.java	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
+++ src/main/java/abstractfactory/RectFactory.java	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
@@ -1,24 +0,0 @@
-package abstractfactory;
-
-import tank.Dir;
-import tank.Group;
-import tank.TankFrame;
-
-public class RectFactory extends GameFactory {
-
-    @Override
-    public BaseTank createTank(int x, int y, Dir dir, Group group, TankFrame tf) {
-        return new RectTank(x, y, dir, group, tf);
-    }
-
-    @Override
-    public BaseExplode createExplode(int x, int y, TankFrame tf) {
-        return new RectExplode(x, y, tf);
-    }
-
-    @Override
-    public BaseBullet createBullet(int x, int y, Dir dir, Group group, TankFrame tf) {
-        return new RectBullet(x, y, dir, group, tf);
-    }
-
-}
\ No newline at end of file
Index: src/main/java/abstractfactory/RectTank.java
===================================================================
--- src/main/java/abstractfactory/RectTank.java	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
+++ src/main/java/abstractfactory/RectTank.java	(revision adcd66f413615b0d3e67ff251409932a72fc6dfb)
@@ -1,177 +0,0 @@
-package abstractfactory;
-
-import tank.*;
-
-import java.awt.*;
-import java.util.Random;
-
-public class RectTank extends BaseTank {
-
-    private static final int SPEED = 2;
-    public static int WIDTH = ResourceMgr.goodTankU.getWidth();
-
-    public static int HEIGHT = ResourceMgr.goodTankU.getHeight();
-
-    public Rectangle rect = new Rectangle();
-
-    private Random random = new Random();
-
-    int x, y;
-
-    Dir dir = Dir.DOWN;
-
-    private boolean moving = true;
-    TankFrame tf = null;
-    private boolean living = true;
-    Group group = Group.BAD;
-
-    FireStrategy fs;
-
-    public RectTank(int x, int y, Dir dir, Group group, TankFrame tf) {
-        super();
-        this.x = x;
-        this.y = y;
-        this.dir = dir;
-        this.group = group;
-        this.tf = tf;
-
-        rect.x = this.x;
-        rect.y = this.y;
-        rect.width = WIDTH;
-        rect.height = HEIGHT;
-
-        if (group == Group.GOOD) {
-            String goodFSName = (String) PropertyMgr.get("goodFS");
-
-            try {
-                fs = (FireStrategy) Class.forName(goodFSName).getDeclaredConstructor().newInstance();
-            } catch (Exception e) {
-                e.printStackTrace();
-            }
-
-        } else {
-            fs = new DefaultFireStrategy();
-        }
-    }
-
-    public void fire() {
-        // fs.fire(this);
-
-        int bX = this.x + RectTank.WIDTH / 2 - Bullet.WIDTH / 2;
-        int bY = this.y + RectTank.HEIGHT / 2 - Bullet.HEIGHT / 2;
-
-        Dir[] dirs = Dir.values();
-        for (Dir dir : dirs) {
-            tf.gf.createBullet(bX, bY, dir, group, tf);
-        }
-
-        if (group == Group.GOOD)
-            new Thread(() -> new Audio("audio/tank_fire.wav").play()).start();
-    }
-
-    public Dir getDir() {
-        return dir;
-    }
-
-    public int getX() {
-        return x;
-    }
-
-    public Group getGroup() {
-        return group;
-    }
-
-    public void setGroup(Group group) {
-        this.group = group;
-    }
-
-    public int getY() {
-        return y;
-    }
-
-    public boolean isMoving() {
-        return moving;
-    }
-
-    private void move() {
-
-        if (!moving)
-            return;
-
-        switch (dir) {
-            case LEFT:
-                x -= SPEED;
-                break;
-            case UP:
-                y -= SPEED;
-                break;
-            case RIGHT:
-                x += SPEED;
-                break;
-            case DOWN:
-                y += SPEED;
-                break;
-        }
-
-        if (this.group == Group.BAD && random.nextInt(100) > 95)
-            this.fire();
-
-        if (this.group == Group.BAD && random.nextInt(100) > 95)
-            randomDir();
-
-        boundsCheck();
-        // update rect
-        rect.x = this.x;
-        rect.y = this.y;
-
-    }
-
-    private void boundsCheck() {
-        if (this.x < 2)
-            x = 2;
-        if (this.y < 28)
-            y = 28;
-        if (this.x > TankFrame.GAME_WIDTH - RectTank.WIDTH - 2)
-            x = TankFrame.GAME_WIDTH - RectTank.WIDTH - 2;
-        if (this.y > TankFrame.GAME_HEIGHT - RectTank.HEIGHT - 2)
-            y = TankFrame.GAME_HEIGHT - RectTank.HEIGHT - 2;
-    }
-
-    private void randomDir() {
-
-        this.dir = Dir.values()[random.nextInt(4)];
-    }
-
-    public void paint(Graphics g) {
-        if (!living)
-            tf.tanks.remove(this);
-
-        Color c = g.getColor();
-        g.setColor(group == Group.GOOD ? Color.RED : Color.BLUE);
-        g.fillRect(x, y, 40, 40);
-        g.setColor(c);
-        move();
-
-    }
-
-    public void setDir(Dir dir) {
-        this.dir = dir;
-    }
-
-    public void setMoving(boolean moving) {
-        this.moving = moving;
-    }
-
-    public void setX(int x) {
-        this.x = x;
-    }
-
-    public void setY(int y) {
-        this.y = y;
-    }
-
-    public void die() {
-        this.living = false;
-    }
-
-}
\ No newline at end of file
